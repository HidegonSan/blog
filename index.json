[{"content":"タイトルの通り、2023年 8月 現在のホロライブメンバー (JP, EN, ID) の YouTubeチャンネル と Twitter (現X) アカウント をまとめてみました。\n間違いがあったら教えてください。\nJSONダウンロードは こちら (オレオレフォーマットですが\u0026hellip;)\n余談ですが、この記事の執筆途中に目次が長すぎて見切れるというバグを発見して、泣く泣く修正しましたw\n(それでもposition: stickyが親要素超えられないせいでページ下部に行くと目次がバグりますが\u0026hellip;)\nJP 0期生 ときのそら (ときのそら) YouTube: https://www.youtube.com/channel/UCp6993wxpyDPHUpavwDFqgg Twitter: https://twitter.com/tokino_sora ロボ子さん (ろぼこさん) YouTube: https://www.youtube.com/channel/UCDqI2jOz0weumE8s7paEk6g Twitter: https://twitter.com/robocosan さくらみこ (さくらみこ) YouTube: https://www.youtube.com/channel/UC-hM6YJuNYVAmUWxeIr9FeA Twitter: https://twitter.com/sakuramiko35 星街すいせい (ほしまち すいせい) YouTube: https://www.youtube.com/channel/UC5CwaMl1eIgY8h02uZw7u8A Twitter: https://twitter.com/suisei_hosimati 1期生 夜空メル (よぞら める) YouTube: https://www.youtube.com/channel/UCD8HOxPs4Xvsm8H0ZxXGiBw Twitter: https://twitter.com/yozoramel 白上フブキ (しらかみ ふぶき) YouTube: https://www.youtube.com/channel/UCdn5BQ06XqgXoAxIhbqw5Rg Twitter: https://twitter.com/shirakamifubuki 夏色まつり (なついろ まつり) YouTube: https://www.youtube.com/channel/UCQ0UDLQCjY0rmuxCDE38FGg Twitter: https://twitter.com/natsuiromatsuri アキ・ローゼンタール (あき・ろーぜんたーる) YouTube: https://www.youtube.com/channel/UCFTLzh12_nrtzqBPsTCqenA Twitter: https://twitter.com/akirosenthal 赤井はあと (あかい はあと) YouTube: https://www.youtube.com/channel/UC1CfXB_kRs3C-zaeTG3oGyg Twitter: https://twitter.com/akaihaato 人見 クリス (ひとみ くりす) (契約解除) YouTube: https://www.youtube.com/channel/UCbfQf5D9v8XBp7_sQsh5rfQ Twitter: https://twitter.com/hitomikurisu 2期生 湊あくあ (みなと あくあ) YouTube: https://www.youtube.com/channel/UC1opHUrw8rvnsadT-iGp7Cg Twitter: https://twitter.com/minatoaqua 紫咲シオン (むらさき しおん) YouTube: https://www.youtube.com/channel/UCXTpFs_3PqI41qX2d9tL2Rw Twitter: https://twitter.com/murasakishionch 百鬼あやめ (なきり あやめ) YouTube: https://www.youtube.com/channel/UC7fk0CB07ly8oSl0aqKkqFg Twitter: https://twitter.com/nakiriayame 癒月ちょこ (ゆづき ちょこ) YouTube: https://www.youtube.com/channel/UC1suqwovbL1kzsoaZgFZLKg Twitter: https://twitter.com/yuzukichococh 大空スバル (おおぞら すばる) YouTube: https://www.youtube.com/channel/UCvzGlP9oQwU\u0026ndash;Y0r9id_jnA Twitter: https://twitter.com/oozorasubaru ホロライブ ファンタジー (3期生) 兎田ぺこら (うさだ ぺこら) YouTube: https://www.youtube.com/channel/UC1DCedRgGHBdm81E1llLhOQ Twitter: https://twitter.com/usadapekora 潤羽るしあ (うるは るしあ) (契約解除) YouTube: https://www.youtube.com/channel/UCl_gCybOJRIgOXw6Qb4qJzQ Twitter: https://twitter.com/uruharushia 不知火フレア (しらぬい ふれあ) YouTube: https://www.youtube.com/channel/UCvInZx9h3jC2JzsIzoOebWg Twitter: https://twitter.com/shiranuiflare 白銀ノエル (しろがね のえる) YouTube: https://www.youtube.com/channel/UCdyqAaZDKHXg4Ahi7VENThQ Twitter: https://twitter.com/shiroganenoel 宝鐘マリン (ほうしょう まりん) YouTube: https://www.youtube.com/channel/UCCzUftO8KOVkV4wQG1vkUvg Twitter: https://twitter.com/houshoumarine ホロふぉーす (4期生) 天音かなた (あまね かなた) YouTube: https://www.youtube.com/channel/UCZlDXzGoo7d44bwdNObFacg Twitter: https://twitter.com/amanekanatach 桐生ココ (きりゅう ここ) (卒業) YouTube: https://www.youtube.com/channel/UCS9uQI-jC3DE0L4IpXyvr6w Twitter: https://twitter.com/kiryucoco 角巻わため (つのまき わため) YouTube: https://www.youtube.com/channel/UCqm3BQLlJfvkTsX_hvm0UmA Twitter: https://twitter.com/tsunomakiwatame 常闇トワ (とこやみ とわ) YouTube: https://www.youtube.com/channel/UC1uv2Oq6kNxgATlCiez59hw Twitter: https://twitter.com/tokoyamitowa 姫森ルーナ (ひめもり るーな) YouTube: https://www.youtube.com/channel/UCa9Y57gfeY0Zro_noHRVrnw Twitter: https://twitter.com/himemoriluna ねぽらぼ (5期生) 雪花ラミィ (ゆきはな らみぃ) YouTube: https://www.youtube.com/channel/UCFKOVgVbGmX65RxO3EtH3iw Twitter: https://twitter.com/yukihanalamy 桃鈴ねね (ももすず ねね) YouTube: https://www.youtube.com/channel/UCAWSyEs_Io8MtpY3m-zqILA Twitter: https://twitter.com/momosuzunene 獅白ぼたん (ししろ ぼたん) YouTube: https://www.youtube.com/channel/UCUKD-uaobj9jiqB-VXt71mA Twitter: https://twitter.com/shishirobotan 尾丸ポルカ (おまる ぽるか) YouTube: https://www.youtube.com/channel/UCK9V2B22uJYu3N7eR_BT9QA Twitter: https://twitter.com/omarupolka 魔乃アロエ (まの あろえ) (引退) YouTube: https://www.youtube.com/channel/UCgZuwn-O7Szh9cAgHqJ6vjw Twitter: https://twitter.com/manoaloe 秘密結社holoX (6期生) ラプラス・ダークネス (らぷらす・だーくねす) YouTube: https://www.youtube.com/channel/UCENwRMx5Yh42zWpzURebzTw Twitter: https://twitter.com/LaplusDarknesss 鷹嶺ルイ (たかね るい) YouTube: https://www.youtube.com/channel/UCs9_O1tRPMQTHQ-N_L6FU2g Twitter: https://twitter.com/takanelui 博衣こより (はくい こより) YouTube: https://www.youtube.com/channel/UC6eWCld0KwmyHFbAqK3V-Rw Twitter: https://twitter.com/hakuikoyori 沙花叉クロヱ (さかまた くろえ) YouTube: https://www.youtube.com/channel/UCIBY1ollUsauvVi4hW4cumw Twitter: https://twitter.com/sakamatachloe 風真いろは (かざま いろは) YouTube: https://www.youtube.com/channel/UC_vMYWcDjmfdpH6r4TTn1MQ Twitter: https://twitter.com/kazamairohach ホロライブゲーマーズ 大神ミオ (おおかみ みお) YouTube: https://www.youtube.com/channel/UCp-5t9SrOQwXMU7iIjQfARg Twitter: https://twitter.com/ookamimio 猫又おかゆ (ねこまた おかゆ) YouTube: https://www.youtube.com/channel/UCvaTdHTWBGv3MKj3KVqJVCw Twitter: https://twitter.com/nekomataokayu 戌神ころね (いぬがみ ころね) YouTube: https://www.youtube.com/channel/UChAnqc_AY5_I3Px5dig3X1Q Twitter: https://twitter.com/inugamikorone イノナカミュージック AZKi (あずき) YouTube: https://www.youtube.com/channel/UC0TXe_LYZ4scaW2XMyi5_kw Twitter: https://twitter.com/AZKi_VDiVA EN Myth Mori Calliope (森美声) (もり かりおぺ) YouTube: https://www.youtube.com/channel/UCL_qhgtOy0dy1Agp8vkySQg Twitter: https://twitter.com/moricalliope Takanashi Kiara (小鳥遊キアラ) (たかなし きあら) YouTube: https://www.youtube.com/channel/UCHsx4Hqa-1ORjQTh9TYDhww Twitter: https://twitter.com/takanashikiara Ninomae Ina\u0026rsquo;nis (一伊那尓栖) (にのまえ いなにす) YouTube: https://www.youtube.com/channel/UCMwGHR0BTZuLsmjY_NT5Pwg Twitter: https://twitter.com/ninomaeinanis Gawr Gura (がうる・ぐら) YouTube: https://www.youtube.com/channel/UCoSrY_IQQVpmIRZ9Xf-y93g Twitter: https://twitter.com/gawrgura Watson Amelia (ワトソン アメリア) YouTube: https://www.youtube.com/channel/UCyl1z3jo3XHR1riLFKG5UAg Twitter: https://twitter.com/watsonameliaEN Project: HOPE IRyS (アイリス) YouTube: https://www.youtube.com/channel/UC8rcEBzJSleTkf_-agPM20g Twitter: https://twitter.com/irys_en Council Tsukumo Sana (九十九佐命) (つくも さな) (卒業) YouTube: https://www.youtube.com/channel/UCsUj0dszADCGbF3gNrQEuSQ Twitter: https://twitter.com/tsukumosana Ceres Fauna (セレス・ファウナ) YouTube: https://www.youtube.com/channel/UCO_aKKYxn4tvrqPjcTzZ6EQ Twitter: https://twitter.com/ceresfauna Ouro Kronii (オーロ・クロニー) YouTube: https://www.youtube.com/channel/UCmbs8T6MWqUHP1tIQvSgKrg Twitter: https://twitter.com/ourokronii Nanashi Mumei (七詩ムメイ) (ななし むめい) YouTube: https://www.youtube.com/channel/UC3n5uGu18FoCy23ggWWp8tA Twitter: https://twitter.com/nanashimumei_en Hakos Baelz (ハコス・ベールズ) YouTube: https://www.youtube.com/channel/UCgmPnx-EEeOrZSg5Tiw7ZRQ Twitter: https://twitter.com/hakosbaelz Advent Shiori Novella (シオリ・ノヴェラ) YouTube: https://www.youtube.com/channel/UCgnfPPb9JI3e9A4cXHnWbyg Twitter: https://twitter.com/shiorinovella Koseki Bijou (古石ビジュー) (こせき びじゅー) YouTube: https://www.youtube.com/channel/UC9p_lqQ0FEDz327Vgf5JwqA Twitter: https://twitter.com/kosekibijou Nerissa Ravencroft (ネリッサ・レイヴンクロフト) YouTube: https://www.youtube.com/channel/UC_sFNM0z0MWm9A6WlKPuMMg Twitter: https://twitter.com/nerissa_en Fuwawa Abyssgard (フワワ・アビスガード) YouTube: https://www.youtube.com/channel/UCt9H_RpQzhxzlyBxFqrdHqA Twitter: https://twitter.com/fuwamoco_en Mococo Abyssgard (モココ・アビスガード) YouTube: https://www.youtube.com/channel/UCt9H_RpQzhxzlyBxFqrdHqA Twitter: https://twitter.com/fuwamoco_en ID 1期生 Ayunda Risu (アユンダ・リス) YouTube: https://www.youtube.com/channel/UCOyYb1c43VlX9rc_lT6NKQw Twitter: https://twitter.com/ayunda_risu Moona Hoshinova (ムーナ・ホシノヴァ) YouTube: https://www.youtube.com/channel/UCP0BspO_AMEe3aQqqpo89Dg Twitter: https://twitter.com/moonahoshinova Airani Iofifteen (アイラニ・イオフィフティーン) YouTube: https://www.youtube.com/channel/UCAoy6rzhSf4ydcYjJw3WoVg Twitter: https://twitter.com/airaniiofifteen 2期生 Kureiji Ollie (クレイジー・オリー) YouTube: https://www.youtube.com/channel/UCYz_5n-uDuChHtLo7My1HnQ Twitter: https://twitter.com/kureijiollie Anya Melfissa (アーニャ・メルフィッサ) YouTube: https://www.youtube.com/channel/UC727SQYUvx5pDDGQpTICNWg Twitter: https://twitter.com/anyamelfissa Pavolia Reine (パヴォリア・レイネ) YouTube: https://www.youtube.com/channel/UChgTyjG-pdNvxxhdsXfHQ5Q Twitter: https://twitter.com/pavoliareine 3期生 Vestia Zeta (ベスティア・ゼータ) YouTube: https://www.youtube.com/channel/UCTvHWSfBZgtxE4sILOaurIQ Twitter: https://twitter.com/vestiazeta Kaela Kovalskia (カエラ・コヴァルスキア) YouTube: https://www.youtube.com/channel/UCZLZ8Jjx_RN2CXloOmgTHVg Twitter: https://twitter.com/kaelakovalskia Kobo Kanaeru (こぼ・かなえる) YouTube: https://www.youtube.com/channel/UCjLEmnpCNeisMxy134KPwWw Twitter: https://twitter.com/kobokanaeru スタッフ 友人A (えーちゃん) Twitter: https://twitter.com/achan_UGA 春先のどか (はるさき のどか) Twitter: https://twitter.com/harusakinodoka 公式 Hololive Official YouTube: https://www.youtube.com/channel/UCJFZiqLMntJufDCHc6bQixg Twitter: https://twitter.com/hololivetv Hololive EN Official YouTube: https://www.youtube.com/channel/UCotXwY6s8pWmuWd_snKYjhg Twitter: https://twitter.com/hololive_En Hololive ID Official YouTube: https://www.youtube.com/channel/UCfrWoRGlawPQDQxxeIDRP0Q Twitter: https://twitter.com/hololive_Id ","permalink":"https://hidegonsan.github.io/blog/posts/hololive_livers/","summary":"タイトルの通り、2023年 8月 現在のホロライブメンバー (JP, EN, ID) の YouTubeチャンネル と Twitter (現X) アカウント をまとめてみました。 間違いがあっ","title":"【2023年 8月】ホロライブメンバーの YouTube, Twitter 一覧にまとめてみた！ (JSONダウンロード付き)"},{"content":"PaperMod、素晴らしいテーマなのですが、ぼちぼち不満もあります。\nそんな不満をHugoのテンプレート機能で解決していこうプロジェクトN記事目になります。\n今回やることはタイトルにもある通り、クリック時の画像の拡大です。\n自分のブログをスマホから見たときに画像が小さくてわざわざ新規タブで見たので改善が必要だと思い、行いました。\n(そもそも適切な大きさの画像を表示しろというのは置いといて)\nやり方 Hugo image hover と適当に調べたら\nMagnific Image Pop-Up Modal for Hugo | GitHub がヒットしました。\n使えそうなのでこのまま使っていきます。\nライセンスは各自見といてください。\n画像描画のフック まずは画像描画をフックします。\n/layouts/_default/_markup/render-image.html を作成します。\n\u0026lt;!-- Magnific Image Pop-Up Modal for Hugo | Thanks: https://gist.github.com/zjeaton/0cdd7e4bed9d292ab6f3d76b0369f16d --\u0026gt; \u0026lt;!-- Images that use the standard image format for markdown will be displayed in a magnific modal popup. Use format ![alt text](/path/to/image.img) --\u0026gt; \u0026lt;!-- Place this file in layouts \u0026gt; _default \u0026gt; _markup \u0026gt; render-image.html --\u0026gt; \u0026lt;!-- Also place the image-modal.css and partial/image-modal.html appropriately. --\u0026gt; \u0026lt;!-- Id for the image on the page is set to a random 6 numbers, chosen from 1 to 500 --\u0026gt; \u0026lt;!-- Onclick opens the modal, and displays/overlays the the image that has the id for the clicked image. --\u0026gt; \u0026lt;!-- attribution appreciated. github: zjeaton web: https://froglegs.co --\u0026gt; \u0026lt;span class=\u0026#34;image_modal_md_image\u0026#34;\u0026gt; \u0026lt;img loading=\u0026#34;lazy\u0026#34; id=\u0026#34;{{ first 6 (shuffle (seq 1 500)) }}\u0026#34; src=\u0026#34;{{ .Destination | safeURL }}\u0026#34; onclick=\u0026#34;open_image_modal(this.id)\u0026#34; alt=\u0026#34;{{ .Text }}\u0026#34; {{ with .Title}} title=\u0026#34;{{ . }}\u0026#34;{{ end }} /\u0026gt; \u0026lt;/span\u0026gt; これを入力します。\nよくわかっていませんが、\u0026lt;img\u0026gt;タグの出力をフックしてこいつを呼び出せるみたいです。\nランダムなIDを生成してonclickでイベント付与、open_image_modalがそのIDの画像をポップアップ、って流れっぽいです。\nポップアップ本体の作成 /layouts/partials/image_modal.html を作成します。\n\u0026lt;!-- Magnific Image Pop-Up Modal for Hugo | Thanks: https://gist.github.com/zjeaton/0cdd7e4bed9d292ab6f3d76b0369f16d --\u0026gt; \u0026lt;!-- Place in layouts \u0026gt; partials \u0026gt; image-modal.html --\u0026gt; \u0026lt;!-- Use the partial at the bottom of any page in which you want magnific pop-up images, or simply place at the bottom of baseof.html --\u0026gt; \u0026lt;!-- Modal will open upon clicking the image. Modal will close with clicking the x or image. --\u0026gt; \u0026lt;!-- The Modal --\u0026gt; \u0026lt;div id=\u0026#34;image_modal\u0026#34; class=\u0026#34;image_modal\u0026#34; onclick=\u0026#34;close_image_modal()\u0026#34;\u0026gt; \u0026lt;button class=\u0026#34;image_modal_close\u0026#34; onclick=\u0026#34;close_image_modal()\u0026#34;\u0026gt;close\u0026lt;/button\u0026gt; \u0026lt;div class=\u0026#34;image_modal_content\u0026#34; onclick=\u0026#34;close_image_modal()\u0026#34;\u0026gt; \u0026lt;img class=\u0026#34;image_modal_picture\u0026#34; id=\u0026#34;image_modal_picture\u0026#34; onclick=\u0026#34;close_image_modal()\u0026#34;\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; // Open the Modal function open_image_modal(target_id) { var src = document.getElementById(target_id).src; if (src.includes(\u0026#34;#\u0026#34;)) { src = src.substring(0, src.indexOf(\u0026#34;#\u0026#34;)); }; document.getElementById(\u0026#34;image_modal_picture\u0026#34;).src = src; document.getElementById(\u0026#34;image_modal\u0026#34;).style.display = \u0026#34;block\u0026#34;; // Ensures the site footer is not shown if front of the modal. Remove if this is not an issue or // there is no footer. \u0026#34;site-footer\u0026#34; id can also be changed appropriately. // document.getElementById(\u0026#34;site-footer\u0026#34;).style.display = \u0026#34;hidden\u0026#34;; // 目次とページトップ非表示 if (document.getElementsByClassName(\u0026#34;toc\u0026#34;).length) { document.getElementsByClassName(\u0026#34;toc\u0026#34;)[0].style.display = \u0026#34;none\u0026#34;; } if (document.getElementById(\u0026#34;top-link\u0026#34;).length) { document.getElementById(\u0026#34;top-link\u0026#34;).style.display = \u0026#34;none\u0026#34;; } } // Close the Modal function close_image_modal() { // prevents flashing last modal image while new id is loading on open document.getElementById(\u0026#34;image_modal_picture\u0026#34;).src = \u0026#34;\u0026#34;; document.getElementById(\u0026#34;image_modal\u0026#34;).style.display = \u0026#34;none\u0026#34;; // See note above regarding the footer // document.getElementById(\u0026#34;site-footer\u0026#34;).style.display = \u0026#34;block\u0026#34;; // 目次とページトップ表示 if (document.getElementsByClassName(\u0026#34;toc\u0026#34;).length) { document.getElementsByClassName(\u0026#34;toc\u0026#34;)[0].style.display = \u0026#34;block\u0026#34;; } if (document.getElementById(\u0026#34;top-link\u0026#34;).length) { document.getElementById(\u0026#34;top-link\u0026#34;).style.display = \u0026#34;block\u0026#34;; } } \u0026lt;/script\u0026gt; これがポップアップ本体です。\nPaperModに合うよう、目次とページトップを隠すようにコードを変更しています。\n(目次は私がsticky_tocというCSSを適用しているからですが\u0026hellip;)\n次はこのポップアップ本体を呼び出します。\nポップアップ本体の呼び出し /layouts/_default/baseof.html の 6~15 行目が\n\u0026lt;body class=\u0026#34; {{- if (or (ne .Kind `page` ) (eq .Layout `archives`) (eq .Layout `search`)) -}} {{- print \u0026#34;list\u0026#34; -}} {{- end -}} {{- if eq site.Params.defaultTheme `dark` -}} {{- print \u0026#34; dark\u0026#34; }} {{- end -}} \u0026#34; id=\u0026#34;top\u0026#34;\u0026gt; となっていると思うので、ここから下に呼び出すコードを書いていきます。\nこの下に以下のコードを追加で貼り付けてください。\n\u0026lt;!-- Magnific Image Pop-Up Modal for Hugo | Thanks: https://gist.github.com/zjeaton/0cdd7e4bed9d292ab6f3d76b0369f16d --\u0026gt; {{- partial \u0026#34;image_modal.html\u0026#34; . -}} これで呼び出し側も完了です。\nCSSの適用 最後にCSSを適用します。\n/assets/css/extended/image_modal.css を作成します。\n/* Magnific Image Pop-Up Modal for Hugo | Thanks: https://gist.github.com/zjeaton/0cdd7e4bed9d292ab6f3d76b0369f16d */ /* The markdown image container */ .image_modal_md_image { cursor: pointer; } /* The Modal (background) */ .image_modal { display: none; position: fixed; z-index: 1; /* padding-top: 4em; */ left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: var(--theme); } /* Modal Content */ .image_modal_content { position: relative; background-color: var(--theme); margin: auto; padding: 0; width: 90%; max-width: 1400px; display: flex; align-items: center; height: 100%; } .image_modal_picture { /* display: flex; align-content: center; */ cursor: pointer; max-width: 100%; /* =\u0026gt; 90% */ max-height: 80vh; margin: auto; width: 100%; object-fit: contain; } /* The Close Button */ /* Optimized for accessibility by using a button named close but shifting the close text out of the button and only showing x */ .image_modal_close { z-index: 2; color: var(--content); background-color: var(--theme); position: absolute; top: .5em; right: .5em; font-size: 2em; font-weight: bold; height: 1em; width: 1em; text-indent: 10em; overflow: hidden; border: 0; } .image_modal_close::after { position: absolute; line-height: 0.5; top: 0.2em; left: 0.1em; text-indent: 0; content: \u0026#34;\\00D7\u0026#34; } .image_modal_close:hover, .image_modal_close:focus { color: var(--primary); text-decoration: none; cursor: pointer; } 上記のコードを貼り付けてください。\nここにつっこんだCSSはHugoかPaperModかによって1ファイルにバンドルされます。(すごく便利)\nこちらも、PaperMod用にテーマ切り替えに対応するよう、カスタムしてあります。\nついでに画像が中央寄せになるようにし、小さい画像の場合いい感じに拡大してくれるようにもしました。\n完成 適当に画像を配置して試してください。\nうちのファビコン\n\u0026hellip;と書いた矢先、バグ発見！\n縦横比が維持されていません！！！\n調べたら object-fit: contain; を指定してあげたら良さそう？( MDN )\nということで設定したらいい感じになってたのでこれで良しとします。\n以上、PaperModでクリック時に画像を拡大する方法でした。\n関連記事もぜひ =ω=\n","permalink":"https://hidegonsan.github.io/blog/posts/papermod-image-expand/","summary":"PaperMod、素晴らしいテーマなのですが、ぼちぼち不満もあります。 そんな不満をHugoのテンプレート機能で解決していこうプロジェクトN記","title":"PaperModでクリック時に画像を拡大する"},{"content":"こんにちは、Hidegonです。久々のブログ更新です。(サボってました)\nタイトルのままなのですがGIGABYTEのマザーボードのBIOSをアップデートしました。\n(UEFIが正しいんだと思いますが、どっこもかしこもBIOSって書いてあるのでBIOSで。)\nBIOSなんて更新しなくてもエエだろ的なスタイルで生きてきましたが、\nGigabyte App Center バックドアによるサプライチェーン攻撃のリスク (Eclypsium) だのなんだのの記事があったのでとりあえず更新したわけです。\nそもそも影響を受けるマザーボード一覧に記載されていませんでしたし、Windowsでもないので更新する必要はないのですが、なんとなく。\nhttps://www.gigabyte.com/jp/Support/Motherboard からBIOSを落とせます。\n私が使っているマザーボードは B660M DS3H AX DDR4 (rev. 1.x) ですので、検索してみます。\n検索するとページに飛んで、下の方にいくと BIOS と書かれた場所があります。\n適当にダウンロードするんですが、詳細にチェックサムがあります。\n値的にCRC16かと思って計算したのですが、一致せず。。。\n調べてたら\nWhat\u0026rsquo;s the deal with the ancient bios checksum algorithm on the Gigabyte site? | Reddit という投稿がありガックリ。\nなんで独自実装なんだよ！標準的なやつにせんかーい！と思いつつも、仕方ないので検証はQ-Flashにまかせて続けていきます。\n(誰かが解析して計算ツール出してくれないかな)\n落としたzipの中身の モデル名.バージョン のファイル (私の場合 B660MDS3HAXDDR4.F23) を適当なUSBフラッシュメモリにコピーします。\nそれをPCに挿して起動時に F2 か Delete か End を連打してQ-Flashに入ります。\nあとは画面の指示通りにやれば更新されます。途中で焦って操作したりしなければダイジョブ、なはず。\n10分もかからなかったと思います。思ってたよりは長い。\n更新完了したら自動で再起動します。\n停電とかおこらなくて良かった。。。更新中はヒヤヒヤですw\n以上、GIGABYTEのBIOSをアップデートした話でした。\n","permalink":"https://hidegonsan.github.io/blog/posts/gigabyte_bios_update/","summary":"こんにちは、Hidegonです。久々のブログ更新です。(サボってました) タイトルのままなのですがGIGABYTEのマザーボードのBIOSをア","title":"GIGABYTEのマザーボードのBIOSをアップデートした"},{"content":"SearXNGとは SearXNGは、複数の検索サイトの検索結果を集めるメタ検索エンジンです。\n個人情報の収集や追跡なく使用できます。\n要はプライバシに配慮した検索エンジンです。\nGoogleやBing、その他さまざまな検索エンジンから検索結果を集めてきて表示してくれます。\nちなみに、SearXNGはSearXのフォークです。\nSearXとの違い 興味ないかもしれませんが一応書いておきます。\nhttps://github.com/searxng/searxng から原文を読めます。\nユーザーエクスペリエンス シンプルテーマの大幅なアップデート:\nデスクトップ、タブレット、モバイルで使用可能 ライト/ダークテーマ の実装 RTL言語のサポート 最新の翻訳を使用でき、Weblateから貢献できる 設定のページの更新:\nどの検索エンジンが信頼できるか、確認できる エンジンは各タブでグループ化されている 各エンジンに説明がある 匿名メトリクスのおかげで、エンジンのバグを報告しやすくなり、エンジンがより早く修正されるようになった メトリクスを記録したくない場合は、サーバでそれを無効にできる 検索結果のURLをブロックしたり、置き換えたりできる セットアップ 画像プロキシに Morty は必要ない ボットをブロックするためにFiltronは必要ない ARM64 と ARM/v7 用の Docker イメージの用意 最新のインストールスクリプトの用意 SearXに比べるとさまざまな機能が追加されていることがわかります。\nSearXのREADME によると、SearXNGは公開インスタンス用、SearXはプライベートな用途用に使ってくれ、とのことです。\nインスタンスの選び方 SearXNGはボランティアが公開インスタンスを建ててくれています。\n私達はそのインスタンスの中から好きなものを選びます。\nが、インスタンスを選ぶ時にポイントがあります。\nそれは\n地理的に近いサーバを使う\nこれが重要なポイントです。結構体感速度が結構違います。\n表示上の速度を信用するとえらい目にあいます。\n日本から計測されてるわけじゃないので\u0026hellip;\nインスタンスの一覧は https://searx.space/ から確認できます。\nCountryに自分の国に近い国コードを入力して検索してください。\n日本に住んでる人ならシンガポール(SG)とかがオススメです。\n設定 右上の設定ボタンから変更できます。\nSearXNGには設定をURLにして保存できる機能があるのでコレを使った設定を貼っておきます。\n設定 僕は priv.au を使っています。\n別のインスタンスでもクエリを移植すれば使えると思います。\nおわりに メタ検索エンジン SearXNG のすゝめでした。\nその他にもいろいろな検索エンジンがあるのでまたいつか比較したいです。\n最後まで読んでいただきありがとうございました。\n","permalink":"https://hidegonsan.github.io/blog/posts/use-searxng/","summary":"SearXNGとは SearXNGは、複数の検索サイトの検索結果を集めるメタ検索エンジンです。 個人情報の収集や追跡なく使用できます。 要はプライ","title":"SearXNGのすゝめ"},{"content":"みなさんはドメインを取得するのにどのレジストラを使用していますか？\n私は Gandi.net を使用する予定です。\nこのGandi.netですが、アカウントに残高を追加する方法の1つとして銀行振込があります。\n私はこの銀行振込を間違えて作成してしまいました。\n遅延の無いように振り込みください。\nこれは困りました。その作成した振り込み金額は100円です。\n100円を追加したところでドメインは購入できません。\nキャンセルボタン？削除ボタン？があったので押したのですが、反応がありません。\nほっとくわけにもいかないのでサポートに連絡しました。\nhttps://help.gandi.net/ja/contact から連絡できます。\nこういうのって英語で送ったほうが対応率高い気するので英語で送りました。\nHello Gandi. I\u0026#39;m sorry, I created a request for a bank transfer for a prepaid account by mistake. How can I cancel this? Can I just leave it alone? Or is there a way to delete/cancel it? I would like to cancel this request. 3日経った頃でしょうか、カスタマーセンターからメールが届きました。\nHello, Thank you for contacting Gandi Customer care. We have canceled the order ********* for you. You can verify in your Gandi account via menu BILLING : https://admin.gandi.net/billing We are at your service for any further question. Sincerely, \\o/ Martin G http://www.gandi.net/ どうやらキャンセルしてくれたみたいです。\nダッシュボードから確認しても履歴はありませんでした。\nこれで無事、銀行振込をキャンセルすることができました。\nやっぱりカスタマーセンターが手厚いところは印象が良いですね。\n間違えて銀行振込を作成してしまった場合は参考にしてみてください。\n最後まで読んでいただきありがとうございました。\n","permalink":"https://hidegonsan.github.io/blog/posts/gandi-cancel-transfer/","summary":"みなさんはドメインを取得するのにどのレジストラを使用していますか？ 私は Gandi.net を使用する予定です。 このGandi.netですが、アカウントに残高を","title":"Gandi.net で銀行振込をキャンセルする方法"},{"content":"この記事ではPaperModでページネーションをカスタム、数字をつける方法について解説します！\nこのブログではテーマに PaperMod を使用しています。\n説明が下手なのですが、PaperModのページネーションは 前のページ/次のページ のような形式です。\nしかし、これでは最古のページにジャンプするのができなかったり、全部で何ページあるかがわかりにくいという問題があります。\nそこで今回はPaperModのページネーションを\n| \u0026lt;\u0026lt; | \u0026lt; | 1 | 2 | 3 | 4 | 5 | \u0026gt; | \u0026gt;\u0026gt; |\nのように変更します。\n早速、Hugoのテンプレート機能を使ってPaperModのページネーション上書きしましょう！\nやり方 まずはページネーションを表示させるテンプレート本体を作っていきます。\nそのテンプレート本体をlist.htmlから呼び出してページネーション変更します。\nページネーションについて調べていたらこんなものを見つけました。\n【Hugo】ページネーションの作り方 標準で用意されている！これは実装が楽そうで良かったです。\nこの記事を参考に作成します。\nHugoのテンプレート機能を使ってページネーションを変更しましょう。\nテンプレートを作成する ページネーションのテンプレート layouts/partials/pagination.html を作成します。\nそして次のコードをコピーして貼り付けてください。\n{{/* Thanks: https://joni.jp/pg/hugo-pagination/ */}} \u0026lt;nav\u0026gt; {{ template \u0026#34;_internal/pagination.html\u0026#34; . }} \u0026lt;/nav\u0026gt; このコードはHugoの内部テンプレートを呼び出しています。\n元コードではナビゲーションタグで囲まれていなかったのですが、ナビゲーションリンク貼ってるんで適切でしょう。( 参考 )\nついでに内部テンプレートがどこにあるのか気になったのでソースを見ました。\n(Hugo)/tpl/tplimpl/embedded/templates/pagination.html が実装っぽかったです。ちゃんと調べてないのでわかりませんが。\nとりあえず、これで関連記事のテンプレートは作成できました。\n次はこのページネーションのテンプレートを呼び出していきましょう。\nテンプレートの呼び出し themes/PaperMod/layouts/_default/list.html を layouts/_default/list.html にコピーしてください。\nコピーしたら88行目に\n\u0026lt;footer class=\u0026#34;page-footer\u0026#34;\u0026gt; と書かれていると思います。\nこの下にテンプレートを呼び出すコードを書いていきます。\nまず、PaperMod標準のページネーションを無効にしましょう。\n89行目から106行目までをコメントアウトするか削除してください。\nこれは知らなかったのですが、Hugoではコメントアウトする際、\n\u0026lt;!-- Comment --\u0026gt; のようにするのではなく、\n{{/* Comment */}} とするらしいです。\nここらへんの仕様はあんまよくわかってないのでいつか勉強したいです。\n気を取り直して、呼び出す処理を書いていきましょう。\nコメントアウトするのは\n\u0026lt;nav class=\u0026#34;pagination\u0026#34;\u0026gt; から\n\u0026lt;/nav\u0026gt; までです。\n無効化が完了したら、次のコードをコピーして コメントアウト/削除 した行の下に貼り付けてください。\n{{/* Thanks: https://joni.jp/pg/hugo-pagination/ */}} {{- partial \u0026#34;pagination.html\u0026#34; . -}} これでテンプレートを呼び出すコードは終わりです。\nCSSを適用する これだけでも一応は機能しますが、見た目が最悪なのでCSSを書いていきます。\nassets/css/extended/custom.css を作成してください。\nここに作成したCSSは1つのファイルにまとめられます。( 詳細 )\n次のコードをコピーして貼り付けてください。\n/* ページネーションを書き換える PaperModのページネーションがベース */ /* ul */ .pagination-default { margin: 0; padding: 0; list-style: none; } /* li */ .pagination-default \u0026gt; .page-item { display: inline-block; width: 100%; text-align: center; } /* テキスト */ .pagination-default \u0026gt; .page-item a { display: block; color: var(--theme); font-size: 16px; line-height: 36px; background: var(--primary); border-radius: calc(36px / 2); padding: 0; margin-left: 5%; width: 90%; } /* 現在のページ */ .pagination-default \u0026gt; .active \u0026gt; a { background: var(--secondary); } /* ホバー */ .pagination-default \u0026gt; li:not(.active) \u0026gt; a:hover { background: var(--content); } これでCSSは終了です。\nPaperModのCSSを参考に作成しました。\nPaperModのCSSは themes/PaperMod/assets/css/common/main.css にあります。\n現在のページの強調やホバー時に背景が変わるようにしました。\nコレ、結構気に入ってます (笑)\nCSSで疑似クラスやセレクタをまじめに使用したことがなかったのですが、かなり融通が効きますね。\nHTML5 + CSS3 はチューリング完全だとか聞いたことがありますが納得です。\nこのブログでも使用しているのでいつか確認してみてください。\nその\u0026hellip;記事が増えないと表示されないので\u0026hellip;\n完成 完成すると次のように表示されていると思います。\n十分な記事数がないと表示されないので注意してください。\n(これは少しカスタムしてあるのでちょっとだけ見た目が違うかもしれません)\n以上で終わりです！お疲れ様でした！\nおわりに 今回はHugoのテンプレート機能を使ってPaperModのページネーションをカスタムしてみました。\nその他にもテンプレート機能を使うことでさまざまなことができます。\nこのブログでは以前に PaperModで関連コンテンツを表示する方法！ という記事も投稿しているのでこちらもぜひご覧ください！\n最後まで読んでいただきありがとうございました。\n","permalink":"https://hidegonsan.github.io/blog/posts/papermod-custom-pagination/","summary":"この記事ではPaperModでページネーションをカスタム、数字をつける方法について解説します！ このブログではテーマに PaperMod を使用しています。 説明","title":"PaperModでページネーションをカスタムする方法！"},{"content":"あまりに3DSのプラグイン事情がややこしかったので、自分で理解するためにも一度整理しました。\n間違っているかもしれません。\n間違えていた場合、連絡してくださると幸いです。\n拡張子 3gx 3ds Game eXtension の略です。\nLuma3DS 3GX Loader を通して実行します。\n配置場所は /luma/plugins/[TID]/plugin.3gx か /luma/plugins/default.3gx です。\n最終的には3gxtoolを通して読み込める形式に変換されます。\n3GX自体のバージョンとして v1 と v2 があります。\nこのバージョン自体が意識されることはほとんどありません。\nLuma 3DS 3GX Loader を通して実行します。\n一度に使用できるプラグインは1つまでです。\nplg plugin の略です。 NTR CFW (BootNTR Selector) を通して実行します。\n配置場所は /plugin/[TID]/plugin.plg です。\n最新のバージョンでは Luma3DS 3GX Loader と共存できます。\nプラグインによっては一度に複数のプラグインを使用できます。\n現在ではほとんど使用されません。\nプラグインの種類 XY式 拡張子は .plg です。\n一度に複数読み込めるかは忘れました。\nSELECT式と併用はできたような気がします。\nX と Y を同時に押すことでメニューが開きます。\nSpeedflyのプラグインがこの形式です。 現在ではほとんど使用されません。\n別名 v1 とも呼ばれます。\nSELECT式 拡張子は .plg です。\nSELECT式プラグインは一度に複数読み込むことができます。\n記憶が曖昧ですが、3, 4つは同時に読み込めた気がします。 SELECTを押すことでメニューが開きます。\nCTRPFが出る前は一番使われていた形式です。\n現在ではほとんど使用されません。\n別名 v2 とも呼ばれます。\nCTRPF 先に言っておくと、これが一番ややこしいです。 ややこしすぎたので早見表を作りました。\n3GX v1 v2 v2 Luma v9.1 v10.1.3 ~ v12.0 v10.1.3 ~ v12.0 libctrpf v0.5.1 v0.6.0 ~ v0.7.3 v0.7.4 ~ 3gxtool v0 v1.0 v1.1 (この表は3gx限定で、plg形式のCTRPFは考慮されていません)\nNanquitasが作成したプラグインを作成するためのフレームワークです。\n現在はPabloMK7がメンテナンスしています。\nまた、それを使用して作成されたプラグインの総称でもあります。\n拡張子は .plg と .3gx の2つがあります。\nCTRPFの中でも大きく分けて2種類あります。\nplg世代 その他の .plg 形式のプラグインと同じようにNTRを通して読み込みます。\n追記: みなとさんより情報をいただきました！\nLuma 3GX Loader 以前に Luma Plugin Loader が存在していた\nLuma Plugin Loader の最初期は .3gx ではなく .plg を読み込んでいた\n読み込めるのはLoaderに対応しているCTRPFだけ\nLumaから読み込む .plg 形式のCTRPFもあったようです！👀\n配置場所は /plugin/[TID]/plugin.plg です。\n多分SELECT式と併用できた気がします。\nただし、CTRPFとは併用できなかった気がします。\n記憶が曖昧なので当てにしないでください。\nplg世代の途中までフリチ (FreeCheat) が搭載されいて、途中から ActionReplay に変わった記憶があります。\n現在ではほとんど使用されません。\n3gx世代 3gx世代でも、大きく分けると2つあります。\n違いはLuma 3GX Loaderのバージョンです。\n3GX v1 使用するLuma 3GX Loaderのバージョンは v9.1 です。\n出回っているほとんどのプラグインがこの 3GX v1 です。\nこう聞くとわかりにくいのですが、CTRPFのバージョンが v0.5.1 のプラグインです。\n3GXバージョンは v1 で、シンボル情報保存などの仕様がありません。\n作成するのに使用する3gxtoolのバージョンはありません。\nバージョンがないだけで、存在はします。\n0.5.1用の3gxtoolバージョンを僕は勝手に v0 と呼んでいます。\n目にする範囲では \u0026ldquo;0.5.1用 3gxtool\u0026rdquo; などと呼ばれています。\n3GX v2 使用するLuma 3GX Loaderのバージョンは v10.1.3 ~ v12.0 です。\n3GX v2に移行すると同時に、CTRPF v0.6.0 がリリースされました。\n3GX v2に対応するlibctrpfバージョンは v0.6.0 ~ です。\n3GX v2の中で覚えておきたいのが3gxtool事件 (勝手にそう呼んでる) です。\n3GX v2移行初期ではバージョンなしの3GX v2用3gxtoolが使用されていました。\nこの3gxtoolでは、プラグインが1MiBを超えるとビルドができないようになっていました。\nVapecordの作者でもあるLukasが3gxtoolをリバースエンジニアリングしてこの制限を解除したものを配布しました。\nこの事件で3GX v2の3gxtool事情が一時期カオスなことになっていました。\nこれは、libctrpf v0.7.3リリース、CTRPFがOSS化された時に3gxtool v1.0が公開されて解決しました。\nlibctrpf v0.6.0 ~ v0.7.3\n3GXバージョンはv2で、3gxtoolのバージョンが途中 (libctrpf v0.7.3 のリリースと同時) から v1.0 になりました。\nすべて割と最近リリースされました。\n音声再生、不具合の修正、ディレクトリ構造の変更 などさまざまな更新がありました。\nlibctrpf v0.7.4 ~\nCitra 上で3GX Loaderを使用できるようになりました。\n3GXバージョンは変わらずv2で、3gxtoolのバージョンがv1.1になりました。\n2023年 2月 23日 の時点ではこの libctrpf v0.7.4 が最新です。\nこのバージョンのリリース後にlibctrpfがパッケージマネージャで管理されるようになりました。\n結局何を使えばいいのか 推奨構成:\nLuma 3GX Loader v12.0 3gxtool v1.1 libctrpf v0.7.4 この構成で作成すれば大丈夫です。\nただし、一部のゲームではアドレスが変わるため、v0.5.1がいまだに使用されています。\nv0.5.1のビルドはさまざまな汚い技 (devkitARMのダウングレード) などが強制されるため、推奨しません。\nどうしても v0.5.1 をビルドしたい人は自分で頑張るしかないです。\nこれらのバージョンの移行は非常に面倒なので慎重に考えたほうがいいです。\n上の推奨構成を使用することを強くオススメします。\nよくある間違い 正しい情報: CTRPF と 3gx は違う CTRPFは3gx の一種です。 3gxは3DSのゲームを拡張するためのものです。\nCTRPFは3gxをより扱いやすくするためのフレームワークです。 しかし、CTRPFを使用せずに3gxが作成されることはほとんどありません。\n実際に、出回っている3gxのほとんどがCTRPFを使用して作成されています。\nそこまで気にする必要はありませんが、同じものではありません。\nおわりに 以上、ややこしすぎる3DSプラグイン事情でした。\n実際にはもっと細かいと思います。\n","permalink":"https://hidegonsan.github.io/blog/posts/3ds-plugin-version/","summary":"あまりに3DSのプラグイン事情がややこしかったので、自分で理解するためにも一度整理しました。 間違っているかもしれません。 間違えていた場合、連","title":"複雑な3DSのプラグイン事情"},{"content":"こんにちは！皆さんは普段GitHubを利用していますか？\n僕はこのブログを書いたり、新しいプロジェクトを探すために毎日利用しています！\nそんなGitHubですが、使っていくうちに不便だと感じるところが出てきませんか？\n今回紹介する \u0026ldquo;Refined GitHub\u0026rdquo; は、そんなちょっとした不便を解消してくれる拡張機能となっています！\nこの拡張機能、なんと 2023年 2月 21日 時点で209個もの機能が実装されているんです！\nぜひこの記事を読んでインストールしてみてください！\nインストール方法 Refined GitHubは Chrome, Firefox, Safari に対応しています。\nブラウザにRefined GitHubをインストールするには、各ブラウザのストアから入手する必要があります。\nChrome Chrome用インストールリンク をクリックしてください。\n次に、 \u0026ldquo;Chrome に追加\u0026rdquo; と書かれた青いボタンを押してください。\nすると\n次の権限にアクセス可能:\napi.github.com、gist.github.com、github.com 上にある自分のデータの読み取りと変更\nと出てきます。\nこれは拡張機能を動作させるために必要な権限なので心配する必要はないです。\n\u0026ldquo;拡張機能を追加\u0026rdquo; と書かれたボタンを押してください。\n拡張機能が追加されると拡張機能の紹介ページが開きます。\nこの後説明する \u0026ldquo;APIベースの機能の有効化\u0026rdquo; への設定リンクが書かれているため、そちらを利用する人はそのままにしておいてください。\n閉じてしまっても拡張機能の設定ページから開くことができるので大丈夫です。\nFirefox Firefox用インストールリンク をクリックしてください。\n次に、 \u0026ldquo;Firefox へ追加\u0026rdquo; と書かれた青いボタンを押してください。\nすると\nRefined GitHub を追加しますか？ この拡張機能は以下の権限が必要です:\n・github.com の保存されたデータへのアクセス\n・api.github.com の保存されたデータへのアクセス\n・gist.github.com の保存されたデータへのアクセス\nと出てきます。\nこれは拡張機能を動作させるために必要な権限なので心配する必要はないです。\n\u0026ldquo;追加(A)\u0026rdquo; と書かれたボタンを押してください。\n拡張機能が追加されると拡張機能の紹介ページが開きます。\nこの後説明する \u0026ldquo;APIベースの機能の有効化\u0026rdquo; への設定リンクが書かれているため、そちらを利用する人はそのままにしておいてください。\n閉じてしまっても拡張機能の設定ページから開くことができるので大丈夫です。\nSafari Safari用インストールリンク Safari は僕がApple製品を所持していないためわかりません。ごめんなさい。\nAPIベースの機能の有効化 これだけでもRefined GitHubは動作します。\nしかし、完全に動作させるためには個人用アクセストークンの追加が必要です。\n個人用アクセストークンを追加すると次の機能が使えるようになります。\n公開リポジトリを編集できる (public_repo 権限) プライベートリポジトリも編集できる (repo 権限) クイックレポ削除が使える (delete_repo 権限) 個人用アクセストークンの追加方法 ここからはChromiumでの画像を載せていきます。Firefoxでも大体同じです\n拡張機能インストール後に表示された紹介ページでオクトキャットの下の\nCreate and add a Personal Access Token in the extension’s options to ensure every feature works correctly.\nの extension’s options がクリックできるのでクリックしてください。\n閉じてしまった人は\nChrome: 右上3点マーク \u0026gt; その他のツール \u0026gt; 拡張機能 \u0026gt; Refined GitHub 詳細 \u0026gt; 拡張機能のオプション\nFirefox: 右上3本線 \u0026gt; アドオンとテーマ \u0026gt; 拡張機能 \u0026gt; Refined GitHub \u0026gt; 設定\nで開けます\nすると拡張機能の設定ページが開きます。\nそこで 🔑 Personal token (optional, generate one) と書かれているところがあります。\ngenerate one がクリックできるのでクリックしてください。\nクリックすると、GitHubに飛び、パスワードを求められます。\nパスワードを入力すると個人用アクセストークンの生成ページが表示されます。\n(旧式のアクセストークンだと気づいた人もいると思います。そのうち Refined GitHub で更新がされると思います。)\n設定は基本そのままで大丈夫ですが、Expirationが30日に設定されているため30日で有効期限が切れてしまいます。\n無期限に設定することもできますが、その場合はセキュリティとトレードオフです。\n自分で好きな期限を設定してください。\n下の方に緑色で Generate token とあります。クリックしましょう。\nクリックするとページが移動します。\nページが移動したら、個人用アクセストークンが表示されているのでコピーします。\n1度しか表示されないのでコピーし忘れないように注意してください。\n(ちなみにこのトークンは無効です。)\nコピーしたらさっきの拡張機能の設定ページに戻ります。\nそして 🔑 Personal token (optional, generate one) の下のテキストボックスに貼り付けます。\nトークンが有効だった場合、その下のテキストが\n☑ The token enables some features to read data from public repositories\n☑ The public_repo scope lets them edit your public repositories\n☑ The repo scope lets them edit private repositories as well\n☑ The delete_repo scope is only used by the quick-repo-deletion feature\nとなります。\nチェックマークが出れば個人用アクセストークンの認証は完了です。\n機能 正直多すぎて紹介しきれません。\n代表的な機能は\n空白文字が見えるようになる 1クリックのコンフリクト修正プログラムの追加 コメントにリアクションした人のアイコンを表示 IssueやPRなどを除くすべてのイベントを非表示にできる コードや会話のタイトルでIssueやPRの参照元やURLをリンクさせる PRのマージ時にチェックを待つオプションの追加 PR内の全ファイルの変更を元に戻すボタンを追加 タイプとステータスで通知を選択できる があります。\nこの拡張機能をインストールした時点で気づいた人もいると思いますが、GitHub内のさまざまなUIが変更されています。\nこの拡張機能は \u0026ldquo;シンプルさ\u0026rdquo; を目的にしているので細かい設定等は必要ありません。\nすべての機能を確認したい人はRefined GitHubのREADMEを確認してみてください。\nおわりに 今回はGitHubの機能を強化する拡張機能 \u0026lsquo;Refined GitHub\u0026rsquo; を紹介しました。\nRefined GitHubから本家に輸入されているデザインもあるそうです。\n今後の動向が見逃せない拡張機能ですね！\n最後まで読んでいただきありがとうございました。\n","permalink":"https://hidegonsan.github.io/blog/posts/refined-github/","summary":"こんにちは！皆さんは普段GitHubを利用していますか？ 僕はこのブログを書いたり、新しいプロジェクトを探すために毎日利用しています！ そんなG","title":"GitHubを強化する拡張機能 'Refined GitHub' のご紹介！"},{"content":"この記事ではPaperModで関連コンテンツを表示する方法について解説します！\nこのブログではテーマに PaperMod を使用しています。\nしかし、PaperModでは関連記事を表示することができません。\nそこで今回はHugoのテンプレート機能を使って関連記事を表示させてみました！\nやり方 まずは関連記事を表示させるテンプレート本体を作っていきます。\nそのテンプレート本体をシングルページから呼び出して関連記事を表示します。\nPaperModに用意されていないかと調べていたらこんなものを見つけました。\nShow related posts | GitHub.com しかしこのプルリクエストは作成から4か月経った今でもマージされていません。\n仕方ないのでHugoのテンプレート機能を使ってこの機能を取り入れましょう。\nテンプレートを作成する 関連記事のテンプレート layouts/partials/related.html を作成します。\nそして次のコードをコピーして貼り付けてください。\n{{/* Show related posts | Thanks: https://github.com/adityatelange/hugo-PaperMod/pull/1049 */}} {{ $related := first 4 (where (where .Site.Pages \u0026#34;.Params.tags\u0026#34; \u0026#34;intersect\u0026#34; .Params.tags) \u0026#34;Permalink\u0026#34; \u0026#34;!=\u0026#34; .Permalink) }} {{ with $related }} \u0026lt;div class=\u0026#34;related\u0026#34;\u0026gt; \u0026lt;h3 class=\u0026#34;see-also\u0026#34;\u0026gt;関連記事\u0026lt;/h3\u0026gt; \u0026lt;ul\u0026gt; {{ range . }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;{{ .RelPermalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; {{ end }} \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; {{ end }} コードの内容についてはいつか追記したいと思います。\nとりあえず、これで関連記事のテンプレートは作成できました。\n次はこの関連記事のテンプレートを呼び出していきましょう。\nテンプレートの呼び出し themes/PaperMod/layouts/_default/single.html を layouts/_default/single.html にコピーしてください。\nコピーしたら38行目に\n\u0026lt;footer class=\u0026#34;post-footer\u0026#34;\u0026gt; と書かれていると思います。\nこの下にテンプレートを呼び出すコードを書いていきます。\n次のコードをコピーして38行目の下に貼り付けてください。\n{{/* Show related posts | Thanks: https://github.com/adityatelange/hugo-PaperMod/pull/1049 */}} {{- if (.Param \u0026#34;ShowRelatedContent\u0026#34;) }} {{- partial \u0026#34;related.html\u0026#34; . }} {{- end }} これでテンプレートを呼び出すコードは終わりです。\n関連記事の表示を有効にする config.yml や hugo.yml などの設定ファイルに次のコードを貼り付けてください。 自分の設定ファイルのフォーマットと同じ構成で書いてください。\nYAML:\nparams: ShowRelatedContent: true TOML:\n[params] ShowRelatedContent = true JSON:\n{ \u0026#34;params\u0026#34;: { \u0026#34;ShowRelatedContent\u0026#34;: true } } CSSを適用する これだけでも一応は機能しますが、見た目が最悪なのでCSSを書いていきます。\nオリジナルのプルリクエストにもCSSがありましたが、あまり好みではなかったため書き直しています。\nassets/css/extended/custom.css を作成してください。\nここに作成したCSSは1つのファイルにまとめられます。( 詳細 )\n次のコードをコピーして貼り付けてください。\n/* 関連記事 親要素 */ .post-footer .related { margin: 0; padding: 0; } /* \u0026#34;関連記事\u0026#34; */ .post-footer h3 { margin: 1.5em 0 0.8em 0; } /* リスト 親要素 */ .post-footer .related ul { margin: 0; padding: 0; list-style: none; } /* リスト アイテム */ .post-footer .related li { display: inline-block; margin-inline-end: 6px; margin-bottom: 6px; } /* リスト アイテム リンク */ .post-footer .related a { border-radius: var(--radius); background: var(--code-bg); border: 1px solid var(--border); display: block; padding: 8px 10px 8px 10px; color: var(--secondary); font-size: 15px; line-height: 34px; background: var(--code-bg); } /* リスト アイテム リンク ホバー */ .post-footer .related a:hover { background: var(--border); } /* 次/前のページとタグとの間をあける*/ .paginav { margin-top: 1.5em; } これでCSSは終了です。\nですが、もうひと工夫を加えてより美しくしてみましょう。\n次のコードを追加してください。\n/* 記事とフッタの間に線を入れる */ .post-footer { border-top: 1px solid; border-image: linear-gradient(90deg, var(--code-bg), var(--primary), var(--code-bg)) 1; } こうすることで記事本体とフッターの間にいい感じの線を入れられます。\nこのブログでも使用しているので後で確認してみてください。\n完成 完成すると次のように表示されていると思います。\n関連記事がないと表示されないので注意してください。\nまた、関連記事は4つまで表示されます。\nお疲れ様でした！\nおわりに 今回はHugoのテンプレート機能を使ってPaperModで関連記事を表示させてみました。\nその他にもテンプレート機能を使うことでさまざまなことができます。\nこのブログでは PaperModでページネーションをカスタムする方法！ という記事も投稿しているのでこちらもぜひご覧ください！\n最後まで読んでいただきありがとうございました。\n","permalink":"https://hidegonsan.github.io/blog/posts/papermod-related/","summary":"この記事ではPaperModで関連コンテンツを表示する方法について解説します！ このブログではテーマに PaperMod を使用しています。 しかし、PaperM","title":"PaperModで関連コンテンツを表示する方法！"},{"content":"Hugoとは Hugoは静的サイトジェネレーターで、高速で簡単にサイトを作成できます。\n公式サイト にはこう書かれています。\n\u0026ldquo;ウェブサイトを構築するための世界最速のフレームワーク\u0026rdquo;\n実際、ブログをビルドしてみたのですが、0.1秒もかかりませんでした。(ページが少ないのもあるけど)\nHugoはGoで作成されているらしいです。( GitHub 組織ページ )\n多くののプラットフォームに対応しており、 リリースページ を見ると\nmacOS DragonFly BSD FreeBSD NetBSD OpenBSD Windows (amd64, arm64) 各種Linuxディストロ (パッケージマネージャ) に対応していました。 しかもシングルバイナリらしいです。バイナリサイズは60MB程度でした。\n僕はpacmanを使用してインストールしましたが、Windowsを使ってる人にはありがたいと思います。\nさらにGitHub Actionsも用意されていてプッシュするたびにビルド \u0026amp; デプロイができます。\nこのブログでもGitHub Actionsを使用してビルドを自動化しています！\nHugoの高速なビルドのおかげか、2000分の上限に届く気配がしません笑\n実際に作成してみる とりあえず クイックスタート を読んで進めました。\nテーマは PaperMod を使用しました。\n選んだ理由は\n更新されている Starが多い レスポンシブ ダークテーマ対応 軽い が大きな理由です。個人的に更新が続いていることはマストです。\nもう1つ別のテーマの Stack とも迷ったんですが、公式のデモページ同士で速度測定をしたところ、Stackが大幅に負けていたのでやめました。\nPaperModはオススメのテーマですが、いくつか気に入らないところがありました。\nページネーションが 前/次 しかない 関連記事を表示できない 目次が固定されない 全部Hugoの機能であるテーマのオーバーライドで解決しました。\nこれについても別の記事で書きたいと思います。\n関連記事の表示方法を解説しました！\nPaperModで関連コンテンツを表示する方法！ PaperModでページネーションをカスタムする方法！ もぜひ確認してください！\n詳しい作り方は他のサイトが解説してくれているのでここでは書きません。\n\u0026hellip;が、いくつかコケた \u0026amp; 更新されていた 点があるのでそれも書きます。\n注意点 設定ファイルは config.* から hugo.* になった ココ です。ほぼ最新の更新です。ほとんどのサイトが古い情報なので注意が必要です。\n古いファイル名でも読みにいくらしいですが変更しておいた方が良さそうです。\nサブディレクトリで運用する場合 canonifyUrls を true にする必要があるそうです。\nbaseUrl とかそのへんでコケまくったのでこれもまた別記事で書きたいと思います。\nその他 注意点ではないですが、YAMLをはじめて読んだのでちょっと困りました。\nもうちょっと明示的に書きたいです。\nその点ではJSON大好きなんですが、コメントとケツカンマができないので\u0026hellip;\nそれさえ解消されればJSONは最強だと思います。\nおわりに 今回はHugoを使用してブログを作ってみました。\nこの記事を書いていて思ったのですが、ブログを書くのって思った以上に大変でした。\nHugoを設定するのは苦でなかったのですが、実際に記事を書くのが予想以上に面倒です。\n文章を書く練習にもなるのでなるべく続けていきたいのですが\u0026hellip;\n頑張って更新を続けられたらと思います。\n最後まで読んでいただきありがとうございました。\n","permalink":"https://hidegonsan.github.io/blog/posts/blog-with-hugo/","summary":"Hugoとは Hugoは静的サイトジェネレーターで、高速で簡単にサイトを作成できます。 公式サイト にはこう書かれています。 \u0026ldquo;ウェブサ","title":"Hugoでブログを作った！"}]