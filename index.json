[{"content":"この記事ではPaperModで関連コンテンツを表示する方法について解説します！\nこのブログではテーマに PaperMod を使用しています。\nしかし、PaperModでは関連記事を表示することができません。\nそこで今回はHugoのテンプレート機能を使って関連記事を表示させてみました！\nやり方 まずは関連記事を表示させるテンプレート本体を作っていきます。\nそのテンプレート本体をシングルページから呼び出して関連記事を表示します。\nPaperModに用意されていないかと調べていたらこんなものを見つけました。\nShow related posts | GitHub.com しかしこのプルリクエストは作成から4か月経った今でもマージされていません。\n仕方ないのでHugoのテンプレート機能を使ってこの機能を取り入れましょう。\nテンプレートを作成する 関連記事のテンプレート layouts/partials/related.html を作成します。\nそして次のコードをコピーして貼り付けてください。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 {{/* Show related posts | Thanks: https://github.com/adityatelange/hugo-PaperMod/pull/1049 */}} {{ $related := first 4 (where (where .Site.Pages \u0026#34;.Params.tags\u0026#34; \u0026#34;intersect\u0026#34; .Params.tags) \u0026#34;Permalink\u0026#34; \u0026#34;!=\u0026#34; .Permalink) }} {{ with $related }} \u0026lt;div class=\u0026#34;related\u0026#34;\u0026gt; \u0026lt;h3 class=\u0026#34;see-also\u0026#34;\u0026gt;関連記事\u0026lt;/h3\u0026gt; \u0026lt;ul\u0026gt; {{ range . }} \u0026lt;li\u0026gt; \u0026lt;a href=\u0026#34;{{ .RelPermalink }}\u0026#34;\u0026gt;{{ .Title }}\u0026lt;/a\u0026gt; \u0026lt;/li\u0026gt; {{ end }} \u0026lt;/ul\u0026gt; \u0026lt;/div\u0026gt; {{ end }} コードの内容についてはいつか追記したいと思います。\nとりあえず、これで関連記事のテンプレートは作成できました。\n次はこの関連記事のテンプレートを呼び出していきましょう。\nテンプレートの呼び出し themes/PaperMod/layouts/_default/single.html を layouts/_default/single.html にコピーしてください。\nコピーしたら38行目に\n1 \u0026lt;footer class=\u0026#34;post-footer\u0026#34;\u0026gt; と書かれていると思います。\nこの下にテンプレートを呼び出すコードを書いていきます。\n次のコードをコピーして38行目の下に貼り付けてください。\n1 2 3 4 {{/* Show related posts | Thanks: https://github.com/adityatelange/hugo-PaperMod/pull/1049 */}} {{- if (.Param \u0026#34;ShowRelatedContent\u0026#34;) }} {{- partial \u0026#34;related.html\u0026#34; . }} {{- end }} これでテンプレートを呼び出すコードは終わりです。\n関連記事の表示を有効にする config.yml や hugo.yml などの設定ファイルに次のコードを貼り付けてください。 自分の設定ファイルのフォーマットと同じ構成で書いてください。\nYAML:\n1 2 params: ShowRelatedContent: true TOML:\n1 2 [params] ShowRelatedContent = true JSON:\n1 2 3 4 5 { \u0026#34;params\u0026#34;: { \u0026#34;ShowRelatedContent\u0026#34;: true } } CSSを適用する これだけでも一応は機能しますが、見た目が最悪なのでCSSを書いていきます。\nオリジナルのプルリクエストにもCSSがありましたが、あまり好みではなかったため書き直しています。\nassets/css/extended/custom.css を作成してください。\nここに作成したCSSは1つのファイルにまとめられます。( 詳細 )\n次のコードをコピーして貼り付けてください。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 /* 関連記事 親要素 */ .post-footer .related { margin: 0; padding: 0; } /* \u0026#34;関連記事\u0026#34; */ .post-footer h3 { margin: 1.5em 0 0.8em 0; } /* リスト 親要素 */ .post-footer .related ul { margin: 0; padding: 0; list-style: none; } /* リスト アイテム */ .post-footer .related li { display: inline-block; margin-inline-end: 6px; margin-bottom: 6px; } /* リスト アイテム リンク */ .post-footer .related a { border-radius: var(--radius); background: var(--code-bg); border: 1px solid var(--border); display: block; padding: 8px 10px 8px 10px; color: var(--secondary); font-size: 15px; line-height: 34px; background: var(--code-bg); } /* リスト アイテム リンク ホバー */ .post-footer .related a:hover { background: var(--border); } /* 次/前のページとタグとの間をあける*/ .paginav { margin-top: 1.5em; } これでCSSは終了です。\nですが、もうひと工夫を加えてより美しくしてみましょう。\n次のコードを追加してください。\n1 2 3 4 5 /* 記事とフッタの間に線を入れる */ .post-footer { border-top: 1px solid; border-image: linear-gradient(90deg, var(--code-bg), var(--primary), var(--code-bg)) 1; } こうすることで記事本体とフッターの間にいい感じの線を入れられます。\nこのブログでも使用しているので後で確認してみてください。\n完成 完成すると次のように表示されていると思います。\n関連記事がないと表示されないので注意してください。\nまた、関連記事は4つまで表示されます。\nお疲れ様でした！\nおわりに 今回はHugoのテンプレート機能を使ってPaperModで関連記事を表示させてみました。\nその他にもテンプレート機能を使うことでさまざまなことができます。\n気になった人は調べてみてください。\n最後まで読んでいただきありがとうございました。\n","permalink":"https://hidegonsan.github.io/blog/posts/papermod-related/","summary":"この記事ではPaperModで関連コンテンツを表示する方法について解説します！ このブログではテーマに PaperMod を使用しています。 しかし、PaperM","title":"PaperModで関連コンテンツを表示する方法を解説！"},{"content":"Hugoとは 静的サイトジェネレーターで、高速で簡単にサイトを作成できます。\n公式サイト にはこう書かれています。\n\u0026ldquo;ウェブサイトを構築するための世界最速のフレームワーク\u0026rdquo;\n実際、ブログをビルドしてみたのですが、0.1秒もかかりませんでした。(ページが少ないのもあるけど)\nHugoはGoで作成されているらしいです。( GitHub 組織ページ )\nかなりたくさんのプラットフォームに対応しており、 リリースページ を見ると\nmacOS DragonFly BSD FreeBSD NetBSD OpenBSD Windows (amd64, arm64) 各種Linuxディストロ (パッケージマネージャ) に対応していました。 しかもシングルバイナリらしいです。バイナリサイズは60MB程度でした。\n僕はpacmanを使用してインストールしましたが、Windowsを使ってる人にはかなりありがたいと思います。\nさらにGitHub Actionsも用意されていてプッシュするたびにビルド \u0026amp; デプロイができます。\n実際に作成してみる とりあえず クイックスタート 読んで進めました。\nテーマは PaperMod を使用しました。\n選んだ理由は\n更新されている Starが多い レスポンシブ ダークテーマ対応 軽い が大きな理由です。個人的に更新が続いていることはマストです。\nもう1つ別のテーマの Stack とも迷ったんですが、公式のデモページで速度測定したところStackが大幅に負けていたのでやめました。\nPaperModはオススメのテーマですがいくつか気に入らないところがありました。\nページネーションが 前/次 しかない 関連記事を表示できない 目次が固定されない 全部Hugoの機能であるテーマのオーバーライドで解決しました。\nこれについても別の記事で書きたいと思います。\n関連記事の表示方法を解説しました！\nPaperModで関連コンテンツを表示する方法を解説！ もぜひ確認してください！\n詳しい作り方は他のサイトが解説してくれているのでここでは書きません。\nが、いくつかコケた \u0026amp; 更新されていた 点があるのでそれも書きます。\n注意点 設定ファイルは config.* から hugo.* になった ココ 。結構最近の更新です。ほとんどのサイトが古い情報なので注意が必要です。\n古いファイル名でも読みにいくらしいですが変更しておいた方が良さそうです。\nサブディレクトリで運用する場合 canonifyUrls を true にする必要があるそうです。\nbaseUrl とかそのへんでコケまくったのでこれもまた別記事で書きたいと思います。\nその他 注意点ではないですが、YAMLをはじめて読んだのでちょっと困りました。\nもうちょっと明示的に書きたいです。\nその点ではJSON大好きなんですが、コメントとケツカンマができないので\u0026hellip;\nそれさえ解消されればJSONは最強だと思います。\nおわりに 今回はHugoを使用してブログを作ってみました。\nこの記事を書いていて思ったのですが、ブログを書くのって思った以上に大変でした。\nHugoを設定するのは苦でなかったのですが、実際に記事を書くのが予想以上に面倒です。\n文章を書く練習にもなるのでなるべく続けていきたいのですが\u0026hellip;\n頑張って更新を続けられたらと思います。\n最後まで読んでいただきありがとうございました。\n","permalink":"https://hidegonsan.github.io/blog/posts/blog-with-hugo/","summary":"Hugoとは 静的サイトジェネレーターで、高速で簡単にサイトを作成できます。 公式サイト にはこう書かれています。 \u0026ldquo;ウェブサイトを構築","title":"Hugoでブログを作った！"}]